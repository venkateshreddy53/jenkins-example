import groovy.json.JsonBuilder
import groovy.transform.Field

@Field boolean buildStatus = true

enum BuildStatus {
  INPROGRESS, SUCCESSFUL, FAILED
}

class BuildInfo {
  String state
  String url
  String key
}

def initGlobalVariables(component) {
  echo "Initializing for: ${component}"
  switch (component) {
    case 'MNO':
    case 'DEV-MNO':
      env.FC = "mno"
      env.FLAG = "true"
      break
    case 'ABC':
    case 'DEV-ABC':
      env.FC = "abc"
      env.FLAG = "true"
      break
    case 'XYZ':
    case 'DEV-XYZ':
      env.FC = "xyz"
      env.FLAG = "true"
      break
  }
  env.JFROG_CLI_OFFER_CONFIG=false
}


node('N-0013') {
  component = "${component}"
  initGlobalVariables(component)
  try {
    stage('scm-checkout') {
      checkout(
          [$class           : 'GitSCM',
           branches         : [[name: "*/${branch}"]],
           userRemoteConfigs: [
               [credentialsId: 'venkateshreddy53',
                url          : 'https://github.com/venkateshreddy53/jenkins-example.git'
               ]
           ],
           gitTool          : 'Default',
           extensions       : [
               [$class: 'CheckoutOption', timeout: 60],
               [$class: 'CloneOption', timeout: 60],
               [$class: 'RelativeTargetDirectory', 'relativeTargetDir': 'jenkins-example'],
               [$class: 'CleanBeforeCheckout']
           ]
         ]
      )
     }
    stage('build') {
        stage('code-generator-build') {
          try {
            sh '''#!/bin/bash
            if [[ $FC == "abc" ]]
            then
              cd $WORKSPACE/jenkins-example/$FC/
              mvn clean install
            elif [[ $FC == "mno" ]]
            then
              mvn clean install
              cd $WORKSPACE/jenkins-example/$FC/
              mvn clean install
            else [[ $FC == "xyz" ]]
              mvn clean install
              cd $WORKSPACE/jenkins-example/$FC/
            fi
            '''
          } catch (Exception ignored) {
            buildStatus = false
            echo "Failure At: code-generator-build"
          }
        }
      }
    stage ("Publish to Hygieia") {
        hygieiaBuildPublishStep buildStatus: 'Success'
		}
    } finally {
		echo "build successfully done"
	}
}